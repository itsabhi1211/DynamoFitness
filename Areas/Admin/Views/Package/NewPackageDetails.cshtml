
@{
    ViewBag.Title = "NewPackageDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
    @model GymDataAccess.Entities.Custom.PackageDetailCustom
}

<script src="~/dist/modules/jquery.min.js"></script>
<script src="~/dist/modules/jquery.min.js"></script>
<link href="~/dist/css/ToggleButton.css" rel="stylesheet" />
<link href="~/dist/css/bootstrap-datepicker.min.css" rel="stylesheet" />

<div class="main-content ">
    <div class="section">
        <h1 class="section-header">
            <div><i class="fa fa-briefcase"></i>&nbsp;Package Details</div>
        </h1>
        <div class="row">



            <div class="col-md-12">
                <div class="card card-primary">
                    <div class="card-header"><h4>Package Details</h4></div>

                    <div class="card-body">

                        <div class="row">
                            <div class="col-md-4">

                                <div class="form-group ">
                                    <label for="pkgname" style="color:black">Package Name</label>
                                    @Html.DropDownList("ddlpackagename", new SelectList(Model.lstpackages.ToList(), "PackageId", "PackageName"), "Select Package Name", new { @class = "form-control " })
                                </div>


                            </div>
                            <div class="col-md-4">
                                <div class="form-group ">
                                    <label for="duration" style="color:black">Time Duration</label>
                                    <select class="form-control " id="ddltimeduration" name="duration">
                                        <option value="0">Choose Time Duration</option>
                                        <option value="30">30</option>
                                        <option value="60">60</option>
                                        <option value="90">90</option>
                                        <option value="180">180</option>

                                    </select>
                                </div>

                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="offer" style="color:black">Offer Status</label>
                                    <select class="form-control " id="ddloffer" name="offer">
                                        <option value="2">Choose Offer Status</option>
                                        <option value="1">On Offer</option>
                                        <option value="0">Not On Offer</option>


                                    </select>
                                </div>

                            </div>
                        </div>
                        <div class="row">

                            <div class="col-md-12 text-right">
                                <div class="form-group">

                                    <button type="button" class="btn btn-primary " id="btnsearch" onclick="Search()">
                                        Search
                                    </button>


                                    <button type="button" class="btn btn-primary " onclick="Reset()">
                                        Reset
                                    </button>
                                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target='#Packagemodal'>Add New Package Details</button>

                                </div>
                            </div>




                        </div>





                    </div>
                </div>
            </div>


        </div>
        <div class="row">


            <div class="col-md-12">
                <div class="card card-primary">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-10">
                                <h4>Package List</h4>
                            </div>

                        </div>

                    </div>


                    <div class="card-body">
                        <div class="table-responsive">
                            <table>
                                <tr>
                                    <th>S.No</th>
                                    <th>
                                        Date

                                    </th>
                                    <th>
                                        Package Name

                                    </th>
                                    <th>
                                        Package Price

                                    </th>
                                    <th>
                                        No Of Installments

                                    </th>
                                    <th>
                                        Price Per Installments

                                    </th>
                                    <th>
                                        Total Price After Installments

                                    </th>
                                    <th>
                                        Duration

                                    </th>



                                    <th>Action</th>
                                </tr>
                                <tbody id="tblcontent">
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="card-footer text-right">
                        <div id="Paginate" class="pagination"></div>
                    </div>
                </div>
            </div>


        </div>


    </div>
</div>



<div class="modal fade" id="PackageOffermodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content card-primary">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Package Offer Details</h5>
                <button type="button" class="close" data-dismiss="modal" onclick="Close()" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

                <div class="row">
                    <div class="col-md-6">

                        <div class="form-group">
                            <label for="txtmodalofferda" style="color:black">Offer Start Date </label>
                            <input id="txtmodalofferdate" readonly="readonly" style="background-color:white" type="text" class="form-control" name="txtofferdate">
                        </div>


                    </div>
                    <div class="col-md-6">


                        <div class="form-group col-12">
                            <label for="txtofferdateend" style="color:black">Offer End Date </label>
                            <input id="txtmodalofferdateend" type="text" readonly="readonly" class="form-control" name="txtofferdateend" style="background-color:white">
                        </div>

                    </div>

                </div>
                <div class="row">
                    <div class="col-md-4">

                        <div class="form-group">
                            <label for="offertype" style="color:black">Offer Type</label>
                            <input id="txtmodaloffertype" type="text" class="form-control" name="offertype" readonly="readonly" style="background-color:white">
                        </div>


                    </div>
                    <div class="col-md-4">

                        <div class="form-group">
                            <label for="offerprice" style="color:black">Offer price</label>
                            <input id="txtoffermodalprice" type="text" class="form-control" name="offerprice" readonly="readonly" style="background-color:white">
                        </div>


                    </div>
                    <div class="col-md-4">
                        <div class="form-group col-12">
                            <label for="discount" style="color:black">Discount</label>
                            <input id="txtmodaldiscount" type="text" class="form-control" name="discount" readonly="readonly" style="background-color:white">
                        </div>

                    </div>

                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="Close()">Close</button>


            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    <div class="modal fade" id="Packagemodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog modal-xl" role="document">
            <div class="modal-content card-primary">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Package Details</h5>
                    <button type="button" class="close" data-dismiss="modal" onclick="ClosePackage()" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4">

                            <div class="form-group ">
                                <label for="pkgname" style="color:black">Package Name</label>
                                @Html.DropDownList("packagename", new SelectList(Model.lstpackages.ToList(), "PackageId", "PackageName"), "Select Package Name", new { @class = "form-control", @onchange = "OnChangePackagePrice()", })

                            </div>


                        </div>
                        <div class="col-md-4">

                            <div class="form-group ">
                                <label for="pkgprice" style="color:black">Package Price</label>
                                <input id="txtpkgprice" type="text" readonly="readonly" class="form-control" name="pkgprice" placeholder="Package Price" style="background-color:white">
                            </div>

                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label for="duration" style="color:black">Time Duration</label>
                                <select class="form-control" id="timeduration" name="duration">
                                    <option value="0">Choose Time Duration</option>
                                    <option value="30">30</option>
                                    <option value="60">60</option>
                                    <option value="90">90</option>
                                    <option value="180">180</option>

                                </select>
                            </div>

                        </div>

                    </div>

                    <div class="row" id="installmentdiv">
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label for="installment" style="color:black">No. Of Installments</label>
                                <input id="noofinstallment" type="text" class="form-control" onkeypress="return restrictAlphabets(event);" name="installment" placeholder="No. Of Installments" onkeyup="NewPrice()" style="background-color:white">
                            </div>

                        </div>
                        <div class="col-md-4">

                            <div class="form-group ">
                                <label for="priceperinstallment" style="color:black">Price Per Installment</label>
                                <input id="txtpriceperinstallment" type="text" class="form-control" name="priceperinstallment" placeholder="Price Per Installment" readonly="readonly" style="background-color:white">
                            </div>


                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label for="ttlpriceafterinstallment" style="color:black">Total Price After Installment</label>
                                <input id="txtttlpriceafterinstallment" type="text" class="form-control" onkeypress="return restrictAlphabets(event);" name="ttlpriceafterinstallment" readonly="readonly" style="background-color:white" placeholder="Total Price After Installment">
                            </div>

                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <label style="color: black;font-size: 12px" class="text-justify">Activity:</label>
                            <div class="form-group ">

                                @foreach (var item in Model.LstActivity)
                                {
                                    <label class="switch ">
                                        @Html.CheckBox(Convert.ToString(@item.Id), new { @class = "all_Checkbox",@id= @item.Activity })
                                        <span class="slider round "></span>
                                    </label>
                                <label class="lbl" style="color: black;  font-size: 14px" id="@item.Activity">&nbsp;  @item.Activity</label>
                                }
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <label class="switch">
                                @Html.CheckBox("chkIsOffer", false)
                                <span class="slider round"></span>
                            </label>&nbsp;<b style="font-size:14px" class="text-danger">Check The Check Box To Add Offer On It</b>

                        </div>

                    </div>

                    <div class="row" id="offerdiv" style="display:none">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="offerprice" style="color:black">Offer Price</label>
                                <input type="text" name="offerprice" id="offerprice" class="form-control" placeholder="Offer Price" onkeypress="return restrictAlphabets(event);" onkeyup="OfferPrice()">

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group ">
                                <label for="offertype" style="color:black">Offer Type</label>
                                <select class="form-control " name="ddloffertype" id="offertype">
                                    <option value="0">Choose Offer Type</option>
                                    <option value="1">Flat</option>
                                    <option value="2">Discount</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="discountprice" style="color:black">Discount</label>
                                <input type="text" id="txtdiscountprice" class="form-control" placeholder="Discount Price" name="discountprice" style="background-color:white" readonly="readonly">
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="offerstartdate1" style="color:black">Offer Start Date</label>

                                <input type="text" id="txtofferdate1" class="form-control datepicker1" placeholder="Offer Start Date">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="txtofferdateend" style="color:black">Offer End Date</label>

                                <input type="text" id="txtofferdateend1" class="form-control datepicker1" placeholder="Offer End Date">
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="txtdesc" style="color:black">Package Description</label>
                                <input type="text" id="packagedescription" name="txtdesc" class="form-control" />
                            </div>
                        </div>
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btnreg" onclick="AddPackagesDetails()">Save</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="ClosePackage()">Close</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="Reset()">Reset</button>




                </div>
            </div>
        </div>
    </div>
}

<input type="hidden" value="@Session["userid"]" id="hdfcurrentuserid" />
<input type="hidden" id="hdfpackagedetailsid" />
<input type="hidden" value="1" id="hdfPageNumber" />
<input type="hidden" value="10" id="hdfPageSize" />

<script type="text/javascript">



    $(document).ready(function () {
        GetPackageDetailsList();
        var date = new Date();
        var today = new Date(date.getFullYear(), date.getMonth(), date.getDate());

        $(".datepicker1").datepicker({
            format: 'm/d/yyyy',
            step: 10,
            startDate: today,
            autoclose: true
        });
        $(".datepicker1").keydown(function (e) {
            e.preventDefault();
        });



    });

    const AddPackagesDetails = () => {

        let button = $("#btnreg").text();

        if (button == "Update") {
            UpdatePackagesDetails();
        }
        else {

            let alrtmsg = "";
            i = 0;          
          

            var arrSelected = [];
            $('.all_Checkbox:checked').each(function () {
             
                arrSelected[i++] = $(this).attr('id');
               
            });
            msg = arrSelected.toString();
          
            $('#packagename option:not(:selected)').attr('disabled', false);
            let Id = $("#hdfpackagedetailsid").val();
            let Packagename = $("#packagename").val();
            let Packageprice = $("#txtpkgprice").val();
            let Duration = $("#timeduration").val();
            let Noofinstallments = 0;
            let Priceperinstallment = 0;
            let Totalpriceafterinstallment = 0;
            let OfferPrice = 0;
            let Offertype = 0;
            let Discount = 0;
            let Isoffer = "";
            let startdate;
            let enddate;
           


            if ($("#chkIsOffer").prop("checked") == true) {
                Isoffer = 1;
                OfferPrice = parseFloat($("#offerprice").val());                
                OfferPrice1 = $("#offerprice").val();
                Offertype = parseInt($("#offertype").val());
                Discount = parseFloat($("#txtdiscountprice").val());
                startdate = $("#txtofferdate1").val();
                enddate = $("#txtofferdateend1").val();
                if (startdate == "") {
                    alrtmsg += "Select the offer start date." + "<br/>";
                    $("#txtofferdate1").css("border", "1px solid red");
                }
                if (enddate == "") {
                    alrtmsg += "Select the offer end date." + "<br/>";
                    $("#txtofferdateend1").css("border", "1px solid red");
                }
                var fromdate = new Date($("#txtofferdate1").val());
                var todate = new Date($("#txtofferdateend1").val());
                if (todate < fromdate) {
                    alrtmsg += "Offer Start Date is greater then Offer End Date." + "<br/>";
                    $("#txtofferdateend1").css("border", "1px solid red");
                    $("#txtofferdate1").css("border", "1px solid red");

                }
                if (OfferPrice == "0") {
                    alrtmsg += "Offer price can not be zero." + "<br/>";
                    $("#offerprice").css("border", "1px solid red");
                }
                if (OfferPrice1 == "") {
                    alrtmsg += "Enter the offer price." + "<br/>";
                    $("#offerprice").css("border", "1px solid red");
                }
                if (Offertype == "0") {
                    alrtmsg += "Select the offer type." + "<br/>";
                    $("#offertype").css("border", "1px solid red");
                }
            }
            else {
                Isoffer = 0;
                if (Packagename.trim() == "") {
                    alrtmsg += "Select the package name." + "<br/>";
                    $("#packagename").css("border", "1px solid red");
                }

                if (Duration.trim() == "0") {
                    alrtmsg += "Select the time duration." + "<br/>";
                    $("#timeduration").css("border", "1px solid red");
                }

                Noofinstallments = $("#noofinstallment").val();
                if (Noofinstallments.trim() == "") {
                    alrtmsg += "Enter the no of installment" + "<br/>";
                    $("#noofinstallment").css("border", "1px solid red");
                }
                Priceperinstallment = parseFloat($("#txtpriceperinstallment").val());
                Totalpriceafterinstallment = parseFloat($("#txtttlpriceafterinstallment").val());
            }
            let currentuserid = $("#hdfcurrentuserid").val();
            if (currentuserid == "") {
                currentuserid = 0;
            }
           

         
            if (arrSelected.length == 0) {
                alrtmsg += "Select the Activity." + "<br/>";
            }
            let PackageDescription = $("#packagedescription").val();


            if (PackageDescription.trim() == "") {
                alrtmsg += "Enter the package description." + "<br/>";
                $("#packagedescription").css("border", "1px solid red");
            }
            if (alrtmsg != "") {
                toastr.warning(alrtmsg);
            }
            else {

                var param = {
                    "PackageDetailId": Id,
                    "PackageId": Packagename,
                    "ActualPrice": Packageprice,
                    "NoOfInstallments": Noofinstallments,
                    "PricePerInstallment": Priceperinstallment,
                    "Discount": Discount,
                    "OfferPrice": OfferPrice,
                    "PlanDescription": PackageDescription,
                    "Crdtby": currentuserid,
                    "TotalPriceAfterInstallment": Totalpriceafterinstallment,
                    "Duration": Duration,
                    "OfferStartDate": startdate,
                    "OfferEndDate": enddate,
                    "OfferType": Offertype,
                    "IsOffer": Isoffer,
                    "OfferPrice": OfferPrice,
                    "AvalableActivity": arrSelected.toString()

                };
                $("body").addClass("loading");
                $.ajax({
                    cache: false,
                    type: "POST",
                    dataType: "json",
                    url: "/Admin/Package/AddNewPackagedetails",
                    data: { param: JSON.stringify(param) },
                    success: function (result) {
                        if (result == 1) {
                            toastr.success('Package Detail Added Successfully.');
                            GetPackageDetailsList();
                            Reset();
                            ClosePackage();
                        }
                        else if (result == 2) {
                            toastr.warning('Package Detail Already Added.');
                            GetPackageDetailsList();
                            Reset();
                            ClosePackage();
                        }
                        else if (result == 3) {
                            toastr.success('Package Detail Updated Successfully.');
                            GetPackageDetailsList();
                            Reset();
                            ClosePackage();
                        }

                        else {
                            toastr.error('Something Went Wrong.');
                            GetPackageDetailsList()
                            Reset();
                            ClosePackage();
                        }
                        $("body").removeClass("loading");
                    },
                    error: function (errormessage) {
                        $("body").removeClass("loading");
                    }
                });
            }
        }
    }

    function GetPackageDetailsList() {

        
        let PackageId = $("#ddlpackagename").val() == "" ? 0 : $("#ddlpackagename").val();
        let Duration = $("#ddltimeduration").val() == "" ? 0 : $("#ddltimeduration").val();
        let IsOffer = $("#ddloffer").val() == "2" ? "" : $("#ddloffer").val();
        let pagenumber = parseInt($("#hdfPageNumber").val());
        let pagesize = parseInt($("#hdfPageSize").val());


        var param = {

            "PageNumber": pagenumber,
            "PageSize": pagesize,
            "PackageId": PackageId,
            "Duration": Duration,
            "IsOffer": IsOffer

        };
        $("body").addClass("loading");

        $.ajax({
            cache: false,
            type: "Get",
            dataType: "json",
            url: "/Admin/Package/GetPackageDetailsList",
            data: { param: JSON.stringify(param) },
            success: function (data) {
                let data1 = JSON.stringify(data);
                let obj = JSON.parse(data1);
                if (pagenumber == 1) {
                    $("#Paginate").pagination({
                        items: parseInt(obj.CustomPagination),
                        itemsOnPage: parseInt($('#hdfPageSize').val()),
                        cssStyle: "light-theme",
                        onPageClick: function (pagenumber, event) {
                            $("#hdfPageNumber").val(pagenumber);
                            window.scrollTo(0, 0);
                            GetPackageDetailsList();
                        }
                    });
                }

                var str = '';
                let sno = 1;
                for (var item in obj.Lstpackagedetails) {
                 
                    str += "<tr>";
                    str += "<td>" + sno + "</td>";
                    str += "<td>" + dateformat(obj.Lstpackagedetails[item].Crdt) + "</td>";
                    str += "<td>" + obj.Lstpackagedetails[item].PackageName + "</td>";
                    str += "<td>" + obj.Lstpackagedetails[item].ActualPrice + "</td>";
                    str += "<td>" + obj.Lstpackagedetails[item].NoOfInstallments + "</td>";
                    str += "<td>" + obj.Lstpackagedetails[item].PricePerInstallment + "</td>";
                    str += "<td>" + obj.Lstpackagedetails[item].TotalPriceAfterInstallment + "</td>";
                    str += "<td>" + obj.Lstpackagedetails[item].Duration + "</td>";
                    let isoffer = obj.Lstpackagedetails[item].IsOffer;
                    if (isoffer == true) {
                        str += "<td><a href='#' title='Edit' data-toggle='modal' data-target='#Packagemodal' onclick='ViewPackagedetails(\"" + obj.Lstpackagedetails[item].PackageDetailId + "\")'><span class='fa fa-edit' style='color: blue;'></span></a> | <a href='#' title='Delete' data-toggle='tooltip' onclick='DeletePackage(\"" + obj.Lstpackagedetails[item].PackageDetailId + "\")'><span class='fa fa-trash' style='color: red;'></span></a> | <a href='#' data-toggle='modal' data-target='#PackageOffermodal' title='Offer Details' data-toggle='tooltip' onclick='ViewPackageOffer(\"" + obj.Lstpackagedetails[item].PackageDetailId + "\")'><span class='fa fa-eye' style='color: green;'></span></a></td>";
                    }
                    else {
                        str += "<td><a href='#' title='Edit' data-toggle='modal' data-target='#Packagemodal' onclick='ViewPackagedetails(\"" + obj.Lstpackagedetails[item].PackageDetailId + "\")'><span class='fa fa-edit' style='color: blue;'></span></a> | <a href='#' title='Delete' data-toggle='tooltip' onclick='DeletePackage(\"" + obj.Lstpackagedetails[item].PackageDetailId + "\")'><span class='fa fa-trash' style='color: red;'></span></a></td>";
                    }


                    str += "</tr>";
                    sno++;

                }
                if (str != "") {
                    $("#tblcontent").html(str);
                }
                else {
                    $("#tblcontent").html("no record found");
                }
                $("body").removeClass("loading");
            },
            error: function (errormessage) {
                $("body").removeClass("loading");
            }
        });
    }

    const OnChangePackagePrice = () => {

        let Packageid = $("#packagename").val();
        if (Packageid == "0") {
            toastr.warning("Select the package name");
            $("#packagename").css("border", "1px solid red");
        }
        else {
            $("body").addClass("loading");

            $.ajax({
                cache: false,
                type: "Get",
                dataType: "json",
                url: "/Admin/Package/GetPackageDetailsById",
                data: { "Packageid": Packageid },
                success: function (data) {
                    let data1 = JSON.stringify(data);
                    let obj = JSON.parse(data1);
                    if (obj != "undefined") {


                        $("#txtpkgprice").val(obj.Packageprice);
                        $("#noofinstallment").attr("readonly", false);
                        $("#packagename").css("border", "1px solid #EDEDED");

                    }
                    $("body").removeClass("loading");
                },
                error: function (errormessage) {
                    $("body").removeClass("loading");
                }
            });
        }


    }

    const NewPrice = () => {
        let alrtmsg = "";
        let PackagePrice = parseInt($("#txtpkgprice").val());
        
        let Noofinstallments = parseInt($("#noofinstallment").val());
        let PricePerInstallment = "";
        let NewPackagePrice = "";
        if (Noofinstallments < 0) {
            alrtmsg += "No. of installment can not be negative" + "<br/>";
            $("#noofinstallment").css("border", "1px solid red");
        }

        if (Noofinstallments == 0) {
            alrtmsg += "No. of installment can not be zero" + "<br/>";
            $("#noofinstallment").css("border", "1px solid red");
        }
        if (alrtmsg != "") {
            toastr.warning(alrtmsg);
        }
        if (Noofinstallments == 1) {
            $("#txtpriceperinstallment").val($("#txtpkgprice").val());
            $("#txtttlpriceafterinstallment").val($("#txtpkgprice").val());
        }

        else {
            NewPackagePrice = parseFloat(PackagePrice) + parseFloat(PackagePrice * 0.2);
            PricePerInstallment = (NewPackagePrice) / Noofinstallments;
            var totalprce = 0;
            for (var i = 0; i < Noofinstallments; i++) {
                totalprce += PricePerInstallment;
            }
            var finalprc = totalprce;
            if (isNaN(PricePerInstallment)) {
                PricePerInstallment = 0
            }
            $("#txtpriceperinstallment").val(PricePerInstallment);
            $("#txtttlpriceafterinstallment").val(finalprc);
        }

    }

    var OfferPrice = function () {

        var actualprice = $("#txtpkgprice").val();
        var offerprc = $("#offerprice").val();

        if (parseFloat(offerprc) >= parseFloat(actualprice)) {
            toastr.warning("Offer Can't Be Applied");
        }
        else {
            var discountprice = parseFloat(actualprice) - parseFloat(offerprc);
            if (isNaN(discountprice)) {
                discountprice = 0
            }
            $("#txtdiscountprice").val(discountprice);
        }



    }

    const ClosePackage = () => {
        $("#Packagemodal").modal('hide');
        Reset();

    }

    const DeletePackage = (PackageDetailId) => {
        let currentuserid = $("#hdfcurrentuserid").val();
        if (currentuserid == "") { currentuserid = 0; }
        let result = confirm("Are You Sure, You want to delete the Package ?");

        if (result == false) {
            return false;
        }
        else {
            $("body").addClass("loading");

            let param =
            {
                "PackageDetailId": PackageDetailId,
                "Crdtby": currentuserid
            };

            $.ajax({
                cache: false,
                type: "Get",
                dataType: "json",
                url: "/Admin/Package/DeletePackageDetails",
                data: { param: JSON.stringify(param) },
                success: function (result) {

                    if (result == 3) {
                        toastr.success('Package Deleted Successfully.');
                        GetPackageDetailsList();
                        Reset();
                    }

                    else {
                        toastr.error('Something Went Wrong.');
                        Reset();
                    }
                    $("body").removeClass("loading");
                },
                error: function (errormessage) {
                    $("body").removeClass("loading");
                }
            });
        }
    }

    const Close = () => {
        $("#PackageOffermodal").modal('hide');

    }

    const dateformat = (date) => {
        let newdate = new Date(date),
            month = '' + (newdate.getMonth() + 1),
            day = '' + newdate.getDate(),
            year = newdate.getFullYear();

        if (month.length < 2) {
            month = '0' + month;
        }

        if (day.length < 2) {
            month = '0' + day;
        }

        return [month, day, year].join('/');
    }

    const ViewPackagedetails = (PackageDetailId) => {
        $("#hdfpackagedetailsid").val(PackageDetailId);
        $("#btnreg").html("Update");
        $("body").addClass("loading");
        $('#packagename option:not(:selected)').attr('disabled', true);
        $.ajax({
            cache: false,
            type: "Get",
            dataType: "json",
            url: "/Admin/Package/GetPackageDetailsByPackageDetailsId",
            data: { "PackageDetailId": PackageDetailId },
            success: function (data) {
                let data1 = JSON.stringify(data);
                let obj = JSON.parse(data1);
                if (obj != "undefined") {
                    $("#txtpkgprice").val(obj.ActualPrice);
                    $("#noofinstallment").val(obj.NoOfInstallments);
                    $("#txtpriceperinstallment").val(obj.PricePerInstallment);
                    $("#txtttlpriceafterinstallment").val(obj.TotalPriceAfterInstallment);
                    $("#packagedescription").val(obj.PlanDescription);
                    let activity = obj.AvalableActivity;
                    var activityarr = activity.split(',');
                    for (var i = 0; i < activityarr.length; i++) {
                        $('#' + activityarr[i]).prop("checked", true);
                    }
                    let package = obj.PackageId;
                    if (package == "") {
                        $("#packagename").val(0);
                    }
                    else {
                        $("#packagename").val(package);

                    }
                    let timeduraction = obj.Duration;
                    if (timeduraction == "") {
                        $("#timeduration").val(0);
                    }
                    else {
                        $("#timeduration").val(obj.Duration);
                    }
                    let offer = obj.IsOffer;
                    if (offer == true) {
                        $('#chkIsOffer').prop("checked", true);
                        $("#offerdiv").show();
                        $("#installmentdiv").hide();
                        $("#offerprice").val(obj.OfferPrice);
                        $("#offertype").val(obj.OfferType);
                        $("#txtdiscountprice").val(obj.Discount);
                        $("#txtofferdate1").val(dateformat(obj.OfferStartDate));
                        $("#txtofferdateend1").val(dateformat(obj.OfferEndDate));

                    }
                }
                $("body").removeClass("loading");
            },
            error: function (errormessage) {
                $("body").removeClass("loading");
            }
        });

    }

    const ViewPackageOffer = (PackageDetailId) => {

        $("body").addClass("loading");
        $.ajax({
            cache: false,
            type: "Get",
            dataType: "json",
            url: "/Admin/Package/GetPackageDetailsByPackageDetailsId",
            data: { "PackageDetailId": PackageDetailId },
            success: function (data) {
                let data1 = JSON.stringify(data);
                let obj = JSON.parse(data1);
                if (obj != "undefined") {
                    $("#txtmodalofferdate").val(dateformat(obj.OfferStartDate));
                    $("#txtmodalofferdateend").val(dateformat(obj.OfferEndDate));
                    let type = obj.OfferType;
                    if (type = 1) {
                        $("#txtmodaloffertype").val("Flat");
                    }
                    else {
                        $("#txtmodaloffertype").val("Discount");

                    }

                    $("#txtoffermodalprice").val(obj.Discount);
                    $("#txtmodaldiscount").val(obj.OfferPrice);
                }
                $("body").removeClass("loading");
            },
            error: function (errormessage) {
                $("body").removeClass("loading");
            }
        });

    }

    const Search = () => {
        $("#hdfPageNumber").val(1);
        GetPackageDetailsList();
    }

    $('#chkIsOffer').click(function () {
        if ($(this).is(":checked")) {
            $("#offerdiv").show();
            $("#installmentdiv").hide();
            $("#noofinstallment, #txtpriceperinstallment, #txtttlpriceafterinstallment").val('');

        }
        else {

            $("#offerdiv").hide();
            $("#installmentdiv").show();
            $("#txtofferprice, #txtofferdate, #txtdiscountprice, #txtofferdateend").val('');
            $("#ddloffertype").val(0);
        }
    });

    const Reset = () => {

        $("body").addClass("loading");
        $('#packagename option:not(:selected)').attr('disabled', false);
        $("#hdfcurrentuserid").val("");
        $("#hdfpackagedetailsid").val("");
        $("#btnreg").html("Save");
        $("#offerdiv").hide();
        $("#installmentdiv").show();
        $("#ddlpackagename").val('');
        $("#ddltimeduration").val(0);
        $("#ddloffer").val(2);
        $("#chkIsOffer").prop("checked", false);
        $("#ddloffertype").val(0);
        $("#packagename").val('');
        $("#noofinstallment").val('');
        $("#txtpkgprice").val('');
        $("#txtpriceperinstallment").val('');
        $("#txtttlpriceafterinstallment").val('');
        $("#timeduration").val(0);
        $(".all_Checkbox").prop("checked", false);
        $("#offerprice").val("");
        $("#offertype").val(0);
        $("#txtdiscountprice").val("");
        $("#txtofferdate1").val("");
        $("#txtofferdateend1").val("");
        $("#packagedescription").val("");
        $("#packagename").css("border", "1px solid #EDEDED");
        $("#noofinstallment").css("border", "1px solid #EDEDED");
        $("#txtpkgprice").css("border", "1px solid #EDEDED");
        $("#txtpriceperinstallment").css("border", "1px solid #EDEDED");
        $("#txtttlpriceafterinstallment").css("border", "1px solid #EDEDED");
        $("#timeduration").css("border", "1px solid #EDEDED");
        $("#offerprice").css("border", "1px solid #EDEDED");
        $("#offertype").css("border", "1px solid #EDEDED");
        $("#txtdiscountprice").css("border", "1px solid #EDEDED");
        $("#txtofferdateend1").css("border", "1px solid #EDEDED");
        $("#txtofferdate1").css("border", "1px solid #EDEDED");
        $("#packagedescription").css("border", "1px solid #EDEDED");
        GetPackageDetailsList();
        $("body").removeClass("loading");
    }

    function restrictAlphabets(e) {
        var x = e.which || e.keycode;
        if ((x >= 48 && x <= 57))
            return true;
        else
            return false;
    }

    const UpdatePackagesDetails = () => {
        let alrtmsg = "";
        i = 0;
        var arrSelected = [];
        $('.all_Checkbox:checked').each(function () {
            arrSelected[i++] = $(this).val();
        });
        let Id = $("#hdfpackagedetailsid").val();
        let Duration = $("#timeduration").val();
        let Noofinstallments = 0;

        let Priceperinstallment = 0;
        let Totalpriceafterinstallment = 0;

        let Isoffer = "";
        let OfferPrice = 0;
        let Offertype = 0;
        let Discount = 0;
        let startdate;
        let enddate;
        if ($("#chkIsOffer").prop("checked") == true) {
            Isoffer = 1;
            OfferPrice = parseFloat($("#offerprice").val());
            OfferPrice1 = $("#offerprice").val();
            Offertype = parseInt($("#offertype").val());
            Discount = parseFloat($("#txtdiscountprice").val());
            startdate = $("#txtofferdate1").val();
            enddate = $("#txtofferdateend1").val();
            if (startdate == "") {
                alrtmsg += "Select the offer start date." + "<br/>";
                $("#txtofferdate1").css("border", "1px solid red");
            }
            if (enddate == "") {
                alrtmsg += "Select the offer end date." + "<br/>";
                $("#txtofferdateend1").css("border", "1px solid red");
            }
            var fromdate = new Date($("#txtofferdate1").val());
            var todate = new Date($("#txtofferdateend1").val());
            if (todate < fromdate) {
                alrtmsg += "Offer Start Date is greater then Offer End Date." + "<br/>";
                $("#txtofferdateend1").css("border", "1px solid red");
                $("#txtofferdate1").css("border", "1px solid red");

            }
            if (OfferPrice == "0") {
                alrtmsg += "Offer price can not be zero." + "<br/>";
                $("#offerprice").css("border", "1px solid red");
            }
            if (OfferPrice1 == "") {
                alrtmsg += "Enter the offer price." + "<br/>";
                $("#offerprice").css("border", "1px solid red");
            }
            if (Offertype == "0") {
                alrtmsg += "Select the offer type." + "<br/>";
                $("#offertype").css("border", "1px solid red");
            }



        }
        else {
            Isoffer = 0;
            Noofinstallments = $("#noofinstallment").val();
            if (Noofinstallments.trim() == "") {
                alrtmsg += "Enter the no of installment" + "<br/>";
                $("#noofinstallment").css("border", "1px solid red");
            }
            Priceperinstallment = parseFloat($("#txtpriceperinstallment").val());
            Totalpriceafterinstallment = parseFloat($("#txtttlpriceafterinstallment").val());
           
        }

        let currentuserid = $("#hdfcurrentuserid").val();
        if (currentuserid == "") { currentuserid = 0; }
        let PackageDescription = $("#packagedescription").val();
        if (Duration.trim() == "0") {
            alrtmsg += "Select the time duration." + "<br/>";
            $("#timeduration").css("border", "1px solid red");
        }
        if (arrSelected.length == 0) {
            alrtmsg += "Select the Activity." + "<br/>";
        }
        if (PackageDescription.trim() == "") {
            alrtmsg += "Enter the package description." + "<br/>";
            $("#packagedescription").css("border", "1px solid red");
        }
        if (alrtmsg != "") {
            toastr.warning(alrtmsg);
        }
        else {

            var param = {
                "PackageDetailId": Id,
                "NoOfInstallments": Noofinstallments,
                "PricePerInstallment": Priceperinstallment,
                "Discount": Discount,
                "OfferPrice": OfferPrice,
                "PlanDescription": PackageDescription,
                "Crdtby": currentuserid,
                "TotalPriceAfterInstallment": Totalpriceafterinstallment,
                "Duration": Duration,
                "OfferStartDate": startdate,
                "OfferEndDate": enddate,
                "OfferType": Offertype,
                "IsOffer": Isoffer,
                "OfferPrice": OfferPrice,
                "AvalableActivity": arrSelected.toString()

            };
            $("body").addClass("loading");
            $.ajax({
                cache: false,
                type: "POST",
                dataType: "json",
                url: "/Admin/Package/AddNewPackagedetails",
                data: { param: JSON.stringify(param) },
                success: function (result) {
                    if (result == 2) {
                        toastr.warning('Package Detail Already Added.');

                        GetPackageDetailsList();
                        Reset();
                        ClosePackage();
                    }
                    else if (result == 3) {
                        toastr.success('Package Detail Updated Successfully.');
                        GetPackageDetailsList();
                        Reset();
                        ClosePackage();
                    }

                    else {
                        toastr.error('Something Went Wrong.');
                        GetPackageDetailsList()
                        Reset();
                        ClosePackage();
                    }
                    $("body").removeClass("loading");
                },
                error: function (errormessage) {
                    $("body").removeClass("loading");
                }
            });
        }
    }

</script>




